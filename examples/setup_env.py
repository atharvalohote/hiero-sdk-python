#!/usr/bin/env python3
"""
Setup script for Hiero Python SDK Examples

This script helps you set up your .env file with the necessary credentials
to run the example scripts.
"""

import os
import sys
from pathlib import Path

def print_welcome():
    """Print welcome message."""
    print("=== Hiero Python SDK Examples Setup ===")
    print()
    print("This script will help you create a .env file with your Hedera testnet credentials.")
    print("You can get these credentials from https://portal.hedera.com/")
    print()

def check_existing_env():
    """Check if .env file exists and get user confirmation."""
    env_path = Path(".env")
    if env_path.exists():
        response = input("A .env file already exists. Do you want to overwrite it? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return False
    return True

def validate_account_id(account_id):
    """Validate account ID format."""
    return account_id.startswith("0.0.") and len(account_id.split(".")) == 3

def validate_private_key(private_key):
    """Validate private key format."""
    return len(private_key) >= 64 and all(c in '0123456789abcdefABCDEF' for c in private_key)

def get_operator_id():
    """Get and validate operator ID from user."""
    while True:
        operator_id = input("Enter your Account ID (format: 0.0.XXXXX): ").strip()
        if validate_account_id(operator_id):
            return operator_id
        print("Invalid Account ID format. Please use format: 0.0.XXXXX")

def get_operator_key():
    """Get and validate operator key from user."""
    while True:
        operator_key = input("Enter your Private Key (hexadecimal string): ").strip()
        if validate_private_key(operator_key):
            return operator_key
        print("Invalid Private Key format. Please provide a valid hexadecimal string.")

def get_network():
    """Get network configuration from user."""
    network = input("Enter network (testnet/mainnet, default: testnet): ").strip()
    return network if network else "testnet"

def create_env_content(operator_id, operator_key, network):
    """Create .env file content."""
    return f"""# Hedera Testnet Account Credentials
# Generated by setup_env.py

# Your Account ID
OPERATOR_ID={operator_id}

# Your Private Key
OPERATOR_KEY={operator_key}

# Network configuration
NETWORK={network}

# Security Notes:
# - Never commit this file to version control
# - Keep your private keys secure and never share them
# - Use testnet credentials for examples (not mainnet)
"""

def write_env_file(content):
    """Write .env file and handle errors."""
    try:
        with open(Path(".env"), 'w') as f:
            f.write(content)
        print()
        print("✅ .env file created successfully!")
        print()
        print("Next steps:")
        print("1. Verify your credentials are correct")
        print("2. Run an example: python3 account_create.py")
        print("3. Check the README.md for more information")
        print()
        print("⚠️  Important: Never commit your .env file to version control!")
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")
        sys.exit(1)

def create_env_file():
    """Create a .env file with user input."""
    print_welcome()
    
    if not check_existing_env():
        return
    
    print("Please provide your Hedera testnet credentials:")
    print()
    
    operator_id = get_operator_id()
    operator_key = get_operator_key()
    network = get_network()
    
    env_content = create_env_content(operator_id, operator_key, network)
    write_env_file(env_content)

def main():
    """Main function."""
    # Ensure we're in the examples directory
    if not Path("account_create.py").exists():
        print("❌ Error: This script must be run from the examples directory.")
        print("Please run: cd examples && python3 setup_env.py")
        sys.exit(1)
    
    create_env_file()

if __name__ == "__main__":
    main()
